diff -urp old/util/demux.c new/util/demux.c
--- old/util/demux.c	2013-01-08 00:26:46.000000000 +0100
+++ new/util/demux.c	2013-01-08 00:59:35.000000000 +0100
@@ -49,18 +49,18 @@ struct demux {
 static AVFormatContext *
 open_file(const char *filename)
 {
-	AVFormatContext *afc;
-	int err = av_open_input_file(&afc, filename, NULL, 0, NULL);
+	AVFormatContext *afc = NULL;
+	int err = avformat_open_input(&afc, filename, NULL, NULL);
 
 	if (!err)
-		err = av_find_stream_info(afc);
+		err = avformat_find_stream_info(afc, NULL);
 
 	if (err < 0) {
 		ERROR("%s: lavf error %d", filename, err);
 		exit(1);
 	}
 
-	dump_format(afc, 0, filename, 0);
+	av_dump_format(afc, 0, filename, 0);
 
 	return afc;
 }
diff -urp old/util/demux.c new/util/demux.c
--- old/util/demux.c	2013-03-24 18:42:17.000000000 +0100
+++ new/util/demux.c	2013-03-24 18:43:31.000000000 +0100
@@ -89,7 +89,7 @@ static struct demux * open_stream(const 
 	AVBitStreamFilterContext *bsf = NULL;
 	struct demux *demux;
 
-	if ((cc->codec_id != CODEC_ID_H264) &&  (cc->codec_id != CODEC_ID_MPEG2VIDEO) && ( cc->codec_id !=  CODEC_ID_MPEG4)){
+	if ((cc->codec_id != AV_CODEC_ID_H264) && (cc->codec_id != AV_CODEC_ID_MPEG2VIDEO) && (cc->codec_id != AV_CODEC_ID_MPEG4)) {
 		ERROR("could not open '%s': unsupported codec %d", filename, cc->codec_id);
 		return NULL;
 	}
@@ -170,7 +170,7 @@ int demux_rewind(struct demux *demux)
 
 void demux_deinit(struct demux *demux)
 {
-	av_close_input_file(demux->afc);
+	avformat_close_input(&demux->afc);
 	if (demux->bsf)
 		av_bitstream_filter_close(demux->bsf);
 	free(demux);
diff -ur old/util/demux.c new/util/demux.c
--- old/util/demux.c	2016-01-31 08:32:50.000000000 +0100
+++ new/util/demux.c	2016-01-31 08:35:23.000000000 +0100
@@ -119,7 +119,7 @@
 	av_register_all();
 	avcodec_register_all();
 	demux = open_stream(filename, width, height);
-	if ((demux != NULL) && (demux->cc->codec_id ==  CODEC_ID_MPEG4)) {
+	if ((demux != NULL) && (demux->cc->codec_id == AV_CODEC_ID_MPEG4)) {
 		if(get_esds_offset(filename, demux))
 			return NULL;
 	}
