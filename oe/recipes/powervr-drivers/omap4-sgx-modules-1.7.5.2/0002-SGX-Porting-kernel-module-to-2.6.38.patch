From 02a81ad3509494fbdba20e89e4ee5672ca366040 Mon Sep 17 00:00:00 2001
From: ubuntu <ubuntu@natty-panda.(none)>
Date: Thu, 14 Apr 2011 23:03:25 -0300
Subject: [PATCH] SGX: Porting kernel module to 2.6.38

Signed-off-by: Ricardo Salveti de Araujo <ricardo.salveti@canonical.com>
---
 .../3rdparty/dc_omap_linux/omaplfb_displayclass.c  |   64 ++++++++++++++++++++
 .../3rdparty/dc_omap_linux/omaplfb_linux.c         |    5 +-
 .../dc_omapfb3_linux/omaplfb_displayclass.c        |   16 +++++
 .../3rdparty/dc_omapfb3_linux/omaplfb_linux.c      |   42 ++++++++++++-
 sgx/services4/include/env/linux/pvr_drm_shared.h   |   24 ++++----
 sgx/services4/srvkm/common/resman.c                |    9 +++-
 sgx/services4/srvkm/env/linux/event.c              |    5 +-
 sgx/services4/srvkm/env/linux/mm.c                 |    5 +-
 sgx/services4/srvkm/env/linux/mm.h                 |    5 +-
 sgx/services4/srvkm/env/linux/mmap.c               |    5 +-
 sgx/services4/srvkm/env/linux/module.c             |    5 +-
 sgx/services4/srvkm/env/linux/mutils.c             |    5 +-
 sgx/services4/srvkm/env/linux/mutils.h             |    6 +-
 sgx/services4/srvkm/env/linux/osfunc.c             |    5 +-
 sgx/services4/srvkm/env/linux/proc.c               |    5 +-
 sgx/services4/srvkm/env/linux/pvr_debug.c          |    4 +
 sgx/services4/srvkm/env/linux/pvr_drm.c            |   19 ++++++-
 sgx/services4/srvkm/env/linux/pvr_drm.h            |   20 +++++--
 sgx/services4/srvkm/env/linux/pvr_uaccess.h        |    5 +-
 19 files changed, 221 insertions(+), 33 deletions(-)

diff --git a/sgx/services4/3rdparty/dc_omap_linux/omaplfb_displayclass.c b/sgx/services4/3rdparty/dc_omap_linux/omaplfb_displayclass.c
index e5eba51..97c43f5 100644
--- a/sgx/services4/3rdparty/dc_omap_linux/omaplfb_displayclass.c
+++ b/sgx/services4/3rdparty/dc_omap_linux/omaplfb_displayclass.c
@@ -302,14 +302,27 @@ OMAP_ERROR UnBlankDisplay(OMAPLFB_DEVINFO *psDevInfo)
 	DEBUG_PRINTK("Executing for display %u",
 		psDevInfo->uDeviceID);
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	acquire_console_sem();
+#else
+	console_lock();
+#endif
 	if (fb_blank(psDevInfo->psLINFBInfo, FB_BLANK_UNBLANK))
 	{
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 		release_console_sem();
+#else
+		console_unlock();
+#endif
 		WARNING_PRINTK("fb_blank FB_BLANK_UNBLANK failed");
 		return OMAP_ERROR_GENERIC;
 	}
+
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	release_console_sem();
+#else
+	console_unlock();
+#endif
 
 	return OMAP_OK;
 }
@@ -324,13 +337,26 @@ static OMAP_ERROR BlankDisplay(OMAPLFB_DEVINFO *psDevInfo, int blank_cmd)
 	DEBUG_PRINTK("Executing for display %u",
 		psDevInfo->uDeviceID);
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	acquire_console_sem();
+#else
+	console_lock();
+#endif
 	if (fb_blank(psDevInfo->psLINFBInfo, blank_cmd)) {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 		release_console_sem();
+#else
+		console_unlock();
+#endif
 		WARNING_PRINTK("fb_blank %i failed", blank_cmd);
 		return OMAP_ERROR_GENERIC;
 	}
+
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	release_console_sem();
+#else
+	console_unlock();
+#endif
 
 	return OMAP_OK;
 }
@@ -537,7 +563,11 @@ static OMAP_ERROR ReInitDev(OMAPLFB_DEVINFO *psDevInfo)
 			WARNING_PRINTK("Unknown bits per pixel format %i",
 				DESIRED_BPP);
 	}
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	acquire_console_sem();
+#else
+	console_lock();
+#endif
 	psLINFBInfo->var.activate = FB_ACTIVATE_FORCE;
 	fb_set_var(psLINFBInfo, &psLINFBInfo->var);
 	buffers_available =
@@ -633,7 +663,11 @@ static OMAP_ERROR ReInitDev(OMAPLFB_DEVINFO *psDevInfo)
 	} else
 		WARNING_PRINTK("*Format: Unknown framebuffer format");
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	release_console_sem();
+#else
+	console_unlock();
+#endif
 	return OMAP_OK;
 }
 
@@ -994,8 +1028,14 @@ static PVRSRV_ERROR CreateDCSwapChain(IMG_HANDLE hDevice,
 	 * and its own work for this display
 	 */
 	INIT_WORK(&psDevInfo->sync_display_work, OMAPLFBSyncIHandler);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	psDevInfo->sync_display_wq =
 		__create_workqueue("pvr_display_sync_wq", 1, 1, 1);
+#else
+	psDevInfo->sync_display_wq =
+		alloc_ordered_workqueue("pvr_display_sync_wq",
+				WQ_NON_REENTRANT | WQ_FREEZABLE | WQ_HIGHPRI);
+#endif
 
 	DEBUG_PRINTK("Swap chain will have %u buffers for display %u",
 		(unsigned int)ui32BufferCount, psDevInfo->uDeviceID);
@@ -1614,7 +1654,11 @@ static void DeInitDev(OMAPLFB_DEVINFO *psDevInfo)
 	struct fb_info *psLINFBInfo = psDevInfo->psLINFBInfo;
 	struct module *psLINFBOwner;
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	acquire_console_sem();
+#else
+	console_lock();
+#endif
 	psLINFBOwner = psLINFBInfo->fbops->owner;
 
 	if (psLINFBInfo->fbops->fb_release != NULL)
@@ -1622,7 +1666,11 @@ static void DeInitDev(OMAPLFB_DEVINFO *psDevInfo)
 
 	module_put(psLINFBOwner);
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	release_console_sem();
+#else
+	console_unlock();
+#endif
 }
 
 /*
@@ -1741,7 +1789,11 @@ static OMAP_ERROR InitDev(OMAPLFB_DEVINFO *psDevInfo, int fb_idx)
 			WARNING_PRINTK("Unknown bits per pixel format %i",
 				DESIRED_BPP);
 	}
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	acquire_console_sem();
+#else
+	console_lock();
+#endif
 	psLINFBInfo->var.activate = FB_ACTIVATE_FORCE;
 	fb_set_var(psLINFBInfo, &psLINFBInfo->var);
 	buffers_available =
@@ -1764,7 +1816,11 @@ static OMAP_ERROR InitDev(OMAPLFB_DEVINFO *psDevInfo, int fb_idx)
 	if (!try_module_get(psLINFBOwner))
 	{
 		ERROR_PRINTK("Couldn't get framebuffer module");
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 		release_console_sem();
+#else
+		console_unlock();
+#endif
 		return OMAP_ERROR_GENERIC;
 	}
 
@@ -1775,7 +1831,11 @@ static OMAP_ERROR InitDev(OMAPLFB_DEVINFO *psDevInfo, int fb_idx)
 			ERROR_PRINTK("Couldn't open framebuffer with"
 				" index %d", fb_idx);
 			module_put(psLINFBOwner);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 			release_console_sem();
+#else
+			console_unlock();
+#endif
 			return OMAP_ERROR_GENERIC;
 		}
 	}
@@ -1869,7 +1929,11 @@ static OMAP_ERROR InitDev(OMAPLFB_DEVINFO *psDevInfo, int fb_idx)
 	else
 		WARNING_PRINTK("*Format: Unknown framebuffer format");
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	release_console_sem();
+#else
+	console_unlock();
+#endif
 	return OMAP_OK;
 }
 
diff --git a/sgx/services4/3rdparty/dc_omap_linux/omaplfb_linux.c b/sgx/services4/3rdparty/dc_omap_linux/omaplfb_linux.c
index 36c94d4..4c34257 100644
--- a/sgx/services4/3rdparty/dc_omap_linux/omaplfb_linux.c
+++ b/sgx/services4/3rdparty/dc_omap_linux/omaplfb_linux.c
@@ -24,9 +24,13 @@
  *
  ******************************************************************************/
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
 #include <linux/config.h>
 #endif
+#endif
 
 #if defined(SUPPORT_DRI_DRM)
 #include <drm/drmP.h>
@@ -34,7 +38,6 @@
 #include <linux/module.h>
 #endif
 
-#include <linux/version.h>
 #include <linux/fb.h>
 #include <asm/io.h>
 
diff --git a/sgx/services4/3rdparty/dc_omapfb3_linux/omaplfb_displayclass.c b/sgx/services4/3rdparty/dc_omapfb3_linux/omaplfb_displayclass.c
index 2d96aa7..0ed53cf 100755
--- a/sgx/services4/3rdparty/dc_omapfb3_linux/omaplfb_displayclass.c
+++ b/sgx/services4/3rdparty/dc_omapfb3_linux/omaplfb_displayclass.c
@@ -831,7 +831,11 @@ static OMAPLFB_ERROR OMAPLFBInitFBDev(OMAPLFB_DEVINFO *psDevInfo)
 	unsigned long ulLCM;
 	unsigned uiFBDevID = psDevInfo->uiFBDevID;
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	acquire_console_sem();
+#else
+	console_lock();
+#endif
 
 	psLINFBInfo = registered_fb[uiFBDevID];
 	if (psLINFBInfo == NULL)
@@ -973,7 +977,11 @@ static OMAPLFB_ERROR OMAPLFBInitFBDev(OMAPLFB_DEVINFO *psDevInfo)
 ErrorModPut:
 	module_put(psLINFBOwner);
 ErrorRelSem:
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	release_console_sem();
+#else
+	console_unlock();
+#endif
 
 	return eError;
 }
@@ -983,7 +991,11 @@ static void OMAPLFBDeInitFBDev(OMAPLFB_DEVINFO *psDevInfo)
 	struct fb_info *psLINFBInfo = psDevInfo->psLINFBInfo;
 	struct module *psLINFBOwner;
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	acquire_console_sem();
+#else
+	console_lock();
+#endif
 
 	psLINFBOwner = psLINFBInfo->fbops->owner;
 
@@ -994,7 +1006,11 @@ static void OMAPLFBDeInitFBDev(OMAPLFB_DEVINFO *psDevInfo)
 
 	module_put(psLINFBOwner);
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	release_console_sem();
+#else
+	console_unlock();
+#endif
 }
 
 static OMAPLFB_DEVINFO *OMAPLFBInitDev(unsigned uiFBDevID)
diff --git a/sgx/services4/3rdparty/dc_omapfb3_linux/omaplfb_linux.c b/sgx/services4/3rdparty/dc_omapfb3_linux/omaplfb_linux.c
index e6289c3..6a0257b 100755
--- a/sgx/services4/3rdparty/dc_omapfb3_linux/omaplfb_linux.c
+++ b/sgx/services4/3rdparty/dc_omapfb3_linux/omaplfb_linux.c
@@ -24,11 +24,13 @@
  *
  ******************************************************************************/
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
 #include <linux/config.h>
 #endif
-
-#include <linux/version.h>
+#endif
 
 #include <asm/atomic.h>
 
@@ -194,7 +196,11 @@ static void WorkQueueHandler(struct work_struct *psWork)
 OMAPLFB_ERROR OMAPLFBCreateSwapQueue(OMAPLFB_SWAPCHAIN *psSwapChain)
 {
 	
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	psSwapChain->psWorkQueue = __create_workqueue(DEVNAME, 1, 1, 1);
+#else
+	psSwapChain->psWorkQueue = alloc_ordered_workqueue(DEVNAME, WQ_NON_REENTRANT | WQ_FREEZABLE | WQ_HIGHPRI);
+#endif
 	if (psSwapChain->psWorkQueue == NULL)
 	{
 		printk(KERN_WARNING DRIVER_PREFIX ": %s: Device %u: create_singlethreaded_workqueue failed\n", __FUNCTION__, psSwapChain->uiFBDevID);
@@ -221,7 +227,11 @@ void OMAPLFBFlip(OMAPLFB_DEVINFO *psDevInfo, OMAPLFB_BUFFER *psBuffer)
 	int res;
 	unsigned long ulYResVirtual;
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	acquire_console_sem();
+#else
+	console_lock();
+#endif
 
 	sFBVar = psDevInfo->psLINFBInfo->var;
 
@@ -253,7 +263,11 @@ void OMAPLFBFlip(OMAPLFB_DEVINFO *psDevInfo, OMAPLFB_BUFFER *psBuffer)
 		}
 	}
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	release_console_sem();
+#else
+	console_unlock();
+#endif
 }
 
 OMAPLFB_UPDATE_MODE OMAPLFBGetUpdateMode(OMAPLFB_DEVINFO *psDevInfo)
@@ -435,9 +449,17 @@ OMAPLFB_ERROR OMAPLFBUnblankDisplay(OMAPLFB_DEVINFO *psDevInfo)
 {
 	int res;
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	acquire_console_sem();
+#else
+	console_lock();
+#endif
 	res = fb_blank(psDevInfo->psLINFBInfo, 0);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	release_console_sem();
+#else
+	console_unlock();
+#endif
 	if (res != 0 && res != -EINVAL)
 	{
 		printk(KERN_WARNING DRIVER_PREFIX
@@ -452,9 +474,17 @@ OMAPLFB_ERROR OMAPLFBUnblankDisplay(OMAPLFB_DEVINFO *psDevInfo)
 
 static void OMAPLFBBlankDisplay(OMAPLFB_DEVINFO *psDevInfo)
 {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	acquire_console_sem();
+#else
+	console_lock();
+#endif
 	fb_blank(psDevInfo->psLINFBInfo, 1);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 	release_console_sem();
+#else
+	console_unlock();
+#endif
 }
 
 static void OMAPLFBEarlySuspendHandler(struct early_suspend *h)
@@ -685,9 +715,17 @@ int PVR_DRM_MAKENAME(DISPLAY_CONTROLLER, _Ioctl)(struct drm_device unref__ *dev,
 				flush_workqueue(psDevInfo->psSwapChain->psWorkQueue);
 			}
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 			acquire_console_sem();
+#else
+			console_lock();
+#endif
 			ret = fb_blank(psDevInfo->psLINFBInfo, iFBMode);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,38))
 			release_console_sem();
+#else
+			console_unlock();
+#endif
 
 			OMAPLFBCreateSwapChainUnLock(psDevInfo);
 
diff --git a/sgx/services4/include/env/linux/pvr_drm_shared.h b/sgx/services4/include/env/linux/pvr_drm_shared.h
index a7e9060..786592c 100755
--- a/sgx/services4/include/env/linux/pvr_drm_shared.h
+++ b/sgx/services4/include/env/linux/pvr_drm_shared.h
@@ -30,19 +30,19 @@
 #if defined(SUPPORT_DRI_DRM)
 
 #if defined(SUPPORT_DRI_DRM_EXT)
-#define PVR_DRM_SRVKM_CMD	DRM_PVR_RESERVED1	
-#define	PVR_DRM_DISP_CMD	DRM_PVR_RESERVED2	
-#define	PVR_DRM_BC_CMD		DRM_PVR_RESERVED3	
-#define PVR_DRM_IS_MASTER_CMD	DRM_PVR_RESERVED4	
-#define PVR_DRM_UNPRIV_CMD	DRM_PVR_RESERVED5	
-#define PVR_DRM_DBGDRV_CMD	DRM_PVR_RESERVED6	
+#define	DRM_PVR_SRVKM		DRM_PVR_RESERVED1
+#define	DRM_PVR_DISP		DRM_PVR_RESERVED2
+#define	DRM_PVR_BC		DRM_PVR_RESERVED3
+#define	DRM_PVR_IS_MASTER	DRM_PVR_RESERVED4
+#define	DRM_PVR_UNPRIV		DRM_PVR_RESERVED5
+#define	DRM_PVR_DBGDRV		DRM_PVR_RESERVED6
 #else	
-#define PVR_DRM_SRVKM_CMD	0	
-#define	PVR_DRM_DISP_CMD	1	
-#define	PVR_DRM_BC_CMD		2	
-#define PVR_DRM_IS_MASTER_CMD	3	
-#define PVR_DRM_UNPRIV_CMD	4	
-#define PVR_DRM_DBGDRV_CMD	5	
+#define	DRM_PVR_SRVKM		0x00
+#define	DRM_PVR_DISP		0x01
+#define	DRM_PVR_BC		0x02
+#define	DRM_PVR_IS_MASTER	0x03
+#define	DRM_PVR_UNPRIV		0x04
+#define	DRM_PVR_DBGDRV		0x05
 #endif	
 
 #define	PVR_DRM_UNPRIV_INIT_SUCCESFUL	0 
diff --git a/sgx/services4/srvkm/common/resman.c b/sgx/services4/srvkm/common/resman.c
index b3a4534..96823c5 100755
--- a/sgx/services4/srvkm/common/resman.c
+++ b/sgx/services4/srvkm/common/resman.c
@@ -27,12 +27,15 @@
 #include "services_headers.h"
 #include "resman.h"
 
+#include <linux/version.h>
+
 #ifdef __linux__
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
-#include <linux/version.h>
 #include <linux/sched.h>
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,9)
 #include <linux/hardirq.h>
@@ -46,7 +49,11 @@
 #include <asm/semaphore.h>
 #endif
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36)
+static DEFINE_SEMAPHORE(lock);
+#else
 static DECLARE_MUTEX(lock);
+#endif
 
 #define ACQUIRE_SYNC_OBJ  do {							\
 		if (in_interrupt()) { 							\
diff --git a/sgx/services4/srvkm/env/linux/event.c b/sgx/services4/srvkm/env/linux/event.c
index c53e02d..01da99c 100755
--- a/sgx/services4/srvkm/env/linux/event.c
+++ b/sgx/services4/srvkm/env/linux/event.c
@@ -24,11 +24,14 @@
  *
  ******************************************************************************/
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
-#include <linux/version.h>
 #include <asm/io.h>
 #include <asm/page.h>
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,22))
diff --git a/sgx/services4/srvkm/env/linux/mm.c b/sgx/services4/srvkm/env/linux/mm.c
index 8ae9fb6..058a2cb 100755
--- a/sgx/services4/srvkm/env/linux/mm.c
+++ b/sgx/services4/srvkm/env/linux/mm.c
@@ -24,11 +24,14 @@
  *
  ******************************************************************************/
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
-#include <linux/version.h>
 #include <linux/mm.h>
 #include <linux/vmalloc.h>
 #include <asm/io.h>
diff --git a/sgx/services4/srvkm/env/linux/mm.h b/sgx/services4/srvkm/env/linux/mm.h
index 9f91186..235ed21 100755
--- a/sgx/services4/srvkm/env/linux/mm.h
+++ b/sgx/services4/srvkm/env/linux/mm.h
@@ -27,11 +27,14 @@
 #ifndef __IMG_LINUX_MM_H__
 #define __IMG_LINUX_MM_H__
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
-#include <linux/version.h>
 #include <linux/slab.h>
 #include <linux/mm.h>
 #include <linux/list.h>
diff --git a/sgx/services4/srvkm/env/linux/mmap.c b/sgx/services4/srvkm/env/linux/mmap.c
index 6379eb0..47bfcd4 100755
--- a/sgx/services4/srvkm/env/linux/mmap.c
+++ b/sgx/services4/srvkm/env/linux/mmap.c
@@ -24,11 +24,14 @@
  *
  ******************************************************************************/
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
-#include <linux/version.h>
 #include <linux/mm.h>
 #include <linux/module.h>
 #include <linux/vmalloc.h>
diff --git a/sgx/services4/srvkm/env/linux/module.c b/sgx/services4/srvkm/env/linux/module.c
index f4a15f1..1685045 100755
--- a/sgx/services4/srvkm/env/linux/module.c
+++ b/sgx/services4/srvkm/env/linux/module.c
@@ -24,9 +24,13 @@
  *
  ******************************************************************************/
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
 #if defined(SUPPORT_DRI_DRM)
 #define	PVR_MOD_STATIC
@@ -53,7 +57,6 @@
 #include <linux/init.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
-#include <linux/version.h>
 #include <linux/fs.h>
 #include <linux/proc_fs.h>
 
diff --git a/sgx/services4/srvkm/env/linux/mutils.c b/sgx/services4/srvkm/env/linux/mutils.c
index 884635e..761ba22 100755
--- a/sgx/services4/srvkm/env/linux/mutils.c
+++ b/sgx/services4/srvkm/env/linux/mutils.c
@@ -24,10 +24,13 @@
  *
  ******************************************************************************/
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
 #include <linux/config.h>
 #endif
-#include <linux/version.h>
+#endif
 
 #include <linux/spinlock.h>
 #include <linux/mm.h>
diff --git a/sgx/services4/srvkm/env/linux/mutils.h b/sgx/services4/srvkm/env/linux/mutils.h
index 92d8e7b..415938f 100755
--- a/sgx/services4/srvkm/env/linux/mutils.h
+++ b/sgx/services4/srvkm/env/linux/mutils.h
@@ -27,11 +27,13 @@
 #ifndef __IMG_LINUX_MUTILS_H__
 #define __IMG_LINUX_MUTILS_H__
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
 #include <linux/config.h>
 #endif
-
-#include <linux/version.h>
+#endif
 
 #if !(defined(__i386__) && (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,26)))
 #if defined(SUPPORT_LINUX_X86_PAT)
diff --git a/sgx/services4/srvkm/env/linux/osfunc.c b/sgx/services4/srvkm/env/linux/osfunc.c
index f3e02ed..281f048 100755
--- a/sgx/services4/srvkm/env/linux/osfunc.c
+++ b/sgx/services4/srvkm/env/linux/osfunc.c
@@ -24,11 +24,14 @@
  *
  ******************************************************************************/
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
-#include <linux/version.h>
 #include <asm/io.h>
 #include <asm/page.h>
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,22))
diff --git a/sgx/services4/srvkm/env/linux/proc.c b/sgx/services4/srvkm/env/linux/proc.c
index a080938..c2372f6 100755
--- a/sgx/services4/srvkm/env/linux/proc.c
+++ b/sgx/services4/srvkm/env/linux/proc.c
@@ -24,13 +24,16 @@
  *
  ******************************************************************************/
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
 #include <linux/init.h>
 #include <linux/module.h>
-#include <linux/version.h>
 #include <linux/fs.h>
 #include <linux/proc_fs.h>
 #include <linux/seq_file.h>
diff --git a/sgx/services4/srvkm/env/linux/pvr_debug.c b/sgx/services4/srvkm/env/linux/pvr_debug.c
index 2e64fe6..5b6325e 100755
--- a/sgx/services4/srvkm/env/linux/pvr_debug.c
+++ b/sgx/services4/srvkm/env/linux/pvr_debug.c
@@ -24,9 +24,13 @@
  *
  ******************************************************************************/
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
 #include <asm/io.h>
 #include <asm/uaccess.h>
diff --git a/sgx/services4/srvkm/env/linux/pvr_drm.c b/sgx/services4/srvkm/env/linux/pvr_drm.c
index ed5a0ba..3cd7a63 100755
--- a/sgx/services4/srvkm/env/linux/pvr_drm.c
+++ b/sgx/services4/srvkm/env/linux/pvr_drm.c
@@ -26,14 +26,17 @@
 
 #if defined(SUPPORT_DRI_DRM)
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
 #include <linux/init.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
-#include <linux/version.h>
 #include <linux/fs.h>
 #include <linux/proc_fs.h>
 #include <linux/sched.h>
@@ -329,6 +332,7 @@ PVRDRM_Display_ioctl(struct drm_device *dev, void *arg, struct drm_file *pFile)
 
 #if !defined(SUPPORT_DRI_DRM_EXT)
 struct drm_ioctl_desc sPVRDrmIoctls[] = {
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,35))
 	DRM_IOCTL_DEF(PVR_DRM_SRVKM_IOCTL, PVRSRV_BridgeDispatchKM, PVR_DRM_UNLOCKED),
 	DRM_IOCTL_DEF(PVR_DRM_IS_MASTER_IOCTL, PVRDRMIsMaster, DRM_MASTER | PVR_DRM_UNLOCKED),
 	DRM_IOCTL_DEF(PVR_DRM_UNPRIV_IOCTL, PVRDRMUnprivCmd, PVR_DRM_UNLOCKED),
@@ -338,6 +342,17 @@ struct drm_ioctl_desc sPVRDrmIoctls[] = {
 #if defined(DISPLAY_CONTROLLER) && defined(PVR_DISPLAY_CONTROLLER_DRM_IOCTL)
 	DRM_IOCTL_DEF(PVR_DRM_DISP_IOCTL, PVRDRM_Display_ioctl, DRM_MASTER | PVR_DRM_UNLOCKED)
 #endif
+#else
+	DRM_IOCTL_DEF_DRV(PVR_SRVKM, PVRSRV_BridgeDispatchKM, PVR_DRM_UNLOCKED),
+	DRM_IOCTL_DEF_DRV(PVR_IS_MASTER, PVRDRMIsMaster, DRM_MASTER | PVR_DRM_UNLOCKED),
+	DRM_IOCTL_DEF_DRV(PVR_UNPRIV, PVRDRMUnprivCmd, PVR_DRM_UNLOCKED),
+#if defined(PDUMP)
+	DRM_IOCTL_DEF_DRV(PVR_DBGDRV, dbgdrv_ioctl, PVR_DRM_UNLOCKED),
+#endif
+#if defined(DISPLAY_CONTROLLER) && defined(PVR_DISPLAY_CONTROLLER_DRM_IOCTL)
+	DRM_IOCTL_DEF_DRV(PVR_DISP, PVRDRM_Display_ioctl, DRM_MASTER | PVR_DRM_UNLOCKED)
+#endif
+#endif
 };
 
 static int pvr_max_ioctl = DRM_ARRAY_SIZE(sPVRDrmIoctls);
@@ -362,8 +377,10 @@ static struct drm_driver sPVRDrmDriver =
 	.suspend = PVRSRVDriverSuspend,
 	.resume = PVRSRVDriverResume,
 #endif
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,36))
 	.get_map_ofs = drm_core_get_map_ofs,
 	.get_reg_ofs = drm_core_get_reg_ofs,
+#endif
 	.ioctls = sPVRDrmIoctls,
 	.fops = 
 	{
diff --git a/sgx/services4/srvkm/env/linux/pvr_drm.h b/sgx/services4/srvkm/env/linux/pvr_drm.h
index 4212faf..e0276df 100755
--- a/sgx/services4/srvkm/env/linux/pvr_drm.h
+++ b/sgx/services4/srvkm/env/linux/pvr_drm.h
@@ -33,6 +33,8 @@
 #define	PVR_DRM_MAKENAME_HELPER(x, y) x ## y
 #define	PVR_DRM_MAKENAME(x, y) PVR_DRM_MAKENAME_HELPER(x, y)
 
+#include <linux/version.h>
+
 #if defined(PVR_DRI_DRM_PLATFORM_DEV)
 #define	LDM_DEV	struct platform_device
 #endif
@@ -87,11 +89,19 @@ IMG_INT dbgdrv_ioctl(struct drm_device *dev, IMG_VOID *arg, struct drm_file *pFi
 #endif
 
 #if !defined(SUPPORT_DRI_DRM_EXT)
-#define	PVR_DRM_SRVKM_IOCTL	_IO(0, PVR_DRM_SRVKM_CMD)
-#define	PVR_DRM_IS_MASTER_IOCTL _IO(0, PVR_DRM_IS_MASTER_CMD)
-#define	PVR_DRM_UNPRIV_IOCTL	_IO(0, PVR_DRM_UNPRIV_CMD)
-#define	PVR_DRM_DBGDRV_IOCTL	_IO(0, PVR_DRM_DBGDRV_CMD)
-#define	PVR_DRM_DISP_IOCTL	_IO(0, PVR_DRM_DISP_CMD)
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,35))
+#define	PVR_DRM_SRVKM_IOCTL	_IO(0, DRM_PVR_SRVKM)
+#define	PVR_DRM_IS_MASTER_IOCTL _IO(0, DRM_PVR_IS_MASTER)
+#define	PVR_DRM_UNPRIV_IOCTL	_IO(0, DRM_PVR_UNPRIV)
+#define	PVR_DRM_DBGDRV_IOCTL	_IO(0, DRM_PVR_DBGDRV)
+#define	PVR_DRM_DISP_IOCTL	_IO(0, DRM_PVR_DISP)
+#else
+#define	DRM_IOCTL_PVR_SRVKM     DRM_IO(DRM_COMMAND_BASE + DRM_PVR_SRVKM)
+#define	DRM_IOCTL_PVR_DISP      DRM_IO(DRM_COMMAND_BASE + DRM_PVR_DISP)
+#define	DRM_IOCTL_PVR_IS_MASTER DRM_IO(DRM_COMMAND_BASE + DRM_PVR_IS_MASTER)
+#define	DRM_IOCTL_PVR_UNPRIV    DRM_IO(DRM_COMMAND_BASE + DRM_PVR_UNPRIV)
+#define	DRM_IOCTL_PVR_DBGDRV    DRM_IO(DRM_COMMAND_BASE + DRM_PVR_DBGDRV)
+#endif
 #endif	
 
 #endif	
diff --git a/sgx/services4/srvkm/env/linux/pvr_uaccess.h b/sgx/services4/srvkm/env/linux/pvr_uaccess.h
index 3db3caf..5c28134 100755
--- a/sgx/services4/srvkm/env/linux/pvr_uaccess.h
+++ b/sgx/services4/srvkm/env/linux/pvr_uaccess.h
@@ -27,11 +27,14 @@
 #ifndef __PVR_UACCESS_H__
 #define __PVR_UACCESS_H__
 
+#include <linux/version.h>
+
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,37))
 #ifndef AUTOCONF_INCLUDED
  #include <linux/config.h>
 #endif
+#endif
 
-#include <linux/version.h>
 #include <asm/uaccess.h>
 
 static inline unsigned long pvr_copy_to_user(void __user *pvTo, const void *pvFrom, unsigned long ulBytes)
-- 
1.7.4.1

