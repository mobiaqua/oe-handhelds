diff -ur old/libmpdemux/demux_lavf.c new/libmpdemux/demux_lavf.c
--- old/libmpdemux/demux_lavf.c	2011-12-17 11:11:28.000000000 +0100
+++ new/libmpdemux/demux_lavf.c	2011-12-20 23:14:49.000000000 +0100
@@ -55,6 +55,7 @@
 static char *opt_cryptokey;
 static char *opt_avopt = NULL;
 static AVBitStreamFilterContext *bsf_handle;
+static int first_frame;
 
 const m_option_t lavfdopts_conf[] = {
 	{"probesize", &(opt_probesize), CONF_TYPE_INT, CONF_RANGE, 32, INT_MAX, NULL},
@@ -215,6 +216,7 @@
     "nut",
     "nuv",
     "matroska,webm",
+    "asf",
     "mov,mp4,m4a,3gp,3g2,mj2",
     "mpc",
     "mpc8",
@@ -554,6 +556,7 @@
     }
 
     bsf_handle = NULL;
+    first_frame = 1;
 
     priv->avfc= avfc;
 
@@ -611,6 +614,7 @@
     int id;
     AVStream *st;
     AVCodecContext *codec;
+    unsigned int *ptr;
     mp_msg(MSGT_DEMUX,MSGL_DBG2,"demux_lavf_fill_buffer()\n");
 
     demux->filepos=stream_tell(demux->stream);
@@ -651,14 +655,31 @@
     }
 
     if(pkt.destruct == av_destruct_packet && !CONFIG_MEMALIGN_HACK){
-        dp=new_demux_packet(0);
         if (id == demux->video->id && bsf_handle) {
+            dp=new_demux_packet(0);
             if (av_bitstream_filter_filter(bsf_handle, codec, NULL, &dp->buffer, &dp->len, pkt.data, pkt.size, 0) < 0) {
                 av_free_packet(&pkt);
                 return 0;
             }
             av_free_packet(&pkt);
+        } else if (id == demux->video->id && codec->codec_id == CODEC_ID_WMV3
+                    && codec->extradata && codec->extradata_size > 0 && first_frame) {
+            dp=new_demux_packet(pkt.size + 36);
+            ptr = dp->buffer;
+            ptr[0] = 0xc5ffffff;
+            ptr[1] = 4;
+            ptr[2] = (1 << 24) | *(unsigned int *)codec->extradata;
+            ptr[3] = codec->height;
+            ptr[4] = codec->width;
+            ptr[5] = 0xc;
+            ptr[6] = 0;
+            ptr[7] = 0;
+            ptr[8] = 0;
+            memcpy(dp->buffer + 36, pkt.data, pkt.size);
+            av_free_packet(&pkt);
+            first_frame = 0;
         } else {
+            dp=new_demux_packet(0);
             dp->len=pkt.size;
             dp->buffer=pkt.data;
             pkt.destruct= NULL;
