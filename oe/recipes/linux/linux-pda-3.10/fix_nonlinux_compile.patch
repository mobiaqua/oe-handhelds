diff -urp old/Makefile new/Makefile
--- old/Makefile	2013-01-05 20:17:05.000000000 +0100
+++ new/Makefile	2013-01-05 20:26:47.000000000 +0100
@@ -245,7 +245,7 @@ CONFIG_SHELL := $(shell if [ -x "$$BASH"
 
 HOSTCC       = gcc
 HOSTCXX      = g++
-HOSTCFLAGS   = -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer
+HOSTCFLAGS   = -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer $(HOST_INC)
 HOSTCXXFLAGS = -O2
 
 # Decide whether to build built-in, modular, or both.
diff -urp old/scripts/mod/sumversion.c new/scripts/mod/sumversion.c
--- old/scripts/mod/sumversion.c	2013-01-05 20:17:13.000000000 +0100
+++ new/scripts/mod/sumversion.c	2013-01-05 20:28:53.000000000 +0100
@@ -10,6 +10,10 @@
 #include <limits.h>
 #include "modpost.h"
 
+#ifndef PATH_MAX
+#define PATH_MAX 1024
+#endif
+
 /*
  * Stolen form Cryptographic API.
  *
diff -urp old/scripts/sortextable.c new/scripts/sortextable.c
--- old/scripts/sortextable.c	2013-06-13 19:52:08.000000000 +0200
+++ new/scripts/sortextable.c	2013-06-16 07:17:48.000000000 +0200
@@ -28,6 +28,11 @@
 #include <string.h>
 #include <unistd.h>
 
+typedef unsigned char      __u8;
+typedef unsigned short     __u16;
+typedef unsigned int       __u32;
+typedef unsigned long long __u64;
+
 #include <tools/be_byteshift.h>
 #include <tools/le_byteshift.h>
 
diff -urp old/tools/include/tools/be_byteshift.h new/tools/include/tools/be_byteshift.h
--- old/tools/include/tools/be_byteshift.h	2013-06-13 19:52:08.000000000 +0200
+++ new/tools/include/tools/be_byteshift.h	2013-06-16 07:18:03.000000000 +0200
@@ -1,7 +1,9 @@
 #ifndef _TOOLS_BE_BYTESHIFT_H
 #define _TOOLS_BE_BYTESHIFT_H
 
+#ifndef __APPLE__
 #include <linux/types.h>
+#endif
 
 static inline __u16 __get_unaligned_be16(const __u8 *p)
 {
diff -urp old/tools/include/tools/le_byteshift.h new/tools/include/tools/le_byteshift.h
--- old/tools/include/tools/le_byteshift.h	2013-06-13 19:52:08.000000000 +0200
+++ new/tools/include/tools/le_byteshift.h	2013-06-16 07:18:10.000000000 +0200
@@ -1,7 +1,9 @@
 #ifndef _TOOLS_LE_BYTESHIFT_H
 #define _TOOLS_LE_BYTESHIFT_H
 
+#ifndef __APPLE__
 #include <linux/types.h>
+#endif
 
 static inline __u16 __get_unaligned_le16(const __u8 *p)
 {
